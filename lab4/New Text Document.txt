#include<stdio.h>

int findLRU(int time[], int n){
    int i, minimum = time[0], pos = 0;

    for(i = 1; i < n; ++i){
        if(time[i] < minimum){
            minimum = time[i];
            pos = i;
        }
    }
    return pos;
}



int main()
{
        int no_of_frames, no_of_pages, frames[10], pages[30], counter = 0, time[10], flag1, flag2, i=0, j=0, pos, faults = 0;


     FILE *f;
    //int k=0,frameno,page[50],e;
    char t[50];
    f=fopen( "inputFIFO.txt", "r" );
     while (!feof(f))
     {
       fscanf(f,"%s",&t);
       if(i==0)
        no_of_frames=atoi(t);
       else if(i==1)
        printf("replacement policy:%s\n-------------------------------------\n",t);
       else
       {
        pages[j]=atoi(t);
        j++;
        no_of_pages=j;
       }
       i++;
     }
     printf("Page   Content of Frames\n----   -----------------\n");











//    printf("Enter number of frames: ");
//    scanf("%d", &no_of_frames);
//
//    printf("Enter number of pages: ");
//    scanf("%d", &no_of_pages);
//
//    printf("Enter reference string: ");

//    for(i = 0; i < no_of_pages; ++i){
//        scanf("%d", &pages[i]);
//    }

    for(i = 0; i < no_of_frames; ++i){
        frames[i] = -1;
    }

    for(i = 0; i < no_of_pages; ++i){
        flag1 = flag2 = 0;

        for(j = 0; j < no_of_frames; ++j){
            if(frames[j] == pages[i]){
                counter++;
                time[j] = counter;
                   flag1 = flag2 = 1;
                   break;
               }
        }

        if(flag1 == 0){
            for(j = 0; j < no_of_frames; ++j){
                if(frames[j] == -1){
                    counter++;
                    faults++;
                    frames[j] = pages[i];
                    time[j] = counter;
                    flag2 = 1;
                    break;
                }
            }
        }

        if(flag2 == 0){
            pos = findLRU(time, no_of_frames);
            counter++;
            faults++;
            frames[pos] = pages[i];
            time[pos] = counter;
        }

        printf("\n");

        for(j = 0; j < no_of_frames; ++j){
            printf("%d\t", frames[j]);
        }
    }

    printf("\n\nTotal Page Faults = %d", faults);

    return 0;
}




if(strcmp(t,"LRU")==1){






#include<stdio.h>
#include <string.h>
int findLRU(int time[], int n){
    int i, minimum = time[0], pos = 0;

    for(i = 1; i < n; ++i){
        if(time[i] < minimum){
            minimum = time[i];
            pos = i;
        }
    }

    return pos;
}

int main()
{
    int no_of_frames, no_of_pages, frames[10], pages[30], counter = 0, time[10], flag1, flag2, i=0, j, pos, faults = 0;
  //  printf("Enter number of frames: ");
    scanf("%d", &no_of_frames);
char t[50];
scanf("%s",&t);



   // printf("Enter reference string: ");

int temp;
do{
    scanf("%d", &pages[i]);
    temp=pages[i];
    i++;

}while(temp!=-1);
no_of_pages=i-1;

printf("replacement policy:%s\n---------------------------------------\n",t);

    printf("Page\tContent of Frames\n------\t-------------------\n");
    for(i = 0; i < no_of_frames; ++i){
        frames[i] = -1;
    }

    for(i = 0; i < no_of_pages; ++i){
        flag1 = flag2 = 0;

        for(j = 0; j < no_of_frames; ++j){
            if(frames[j] == pages[i]){
                counter++;
                time[j] = counter;
                   flag1 = flag2 = 1;

                    printf("\n");
 printf("%d \t", pages[i]);
        for(j = 0; j < no_of_frames && frames[j]!=-1; ++j){
            printf("%d\t", frames[j]);
        }

                   break;
               }
        }

        if(flag1 == 0){
            for(j = 0; j < no_of_frames; ++j){
                if(frames[j] == -1){
                    counter++;
                   // faults++;
                    frames[j] = pages[i];
                    time[j] = counter;
                    flag2 = 1;
                     printf("\n");
 printf("%d \t", pages[i]);
        for(j = 0; j < no_of_frames && frames[j]!=-1; ++j){
            printf("%d\t", frames[j]);
        }

                    break;
                }
            }
        }

        if(flag2 == 0){
            pos = findLRU(time, no_of_frames);
            counter++;
            faults++;
            frames[pos] = pages[i];
            time[pos] = counter;

             printf("\n");
 printf("%d  F \t", pages[i]);
        for(j = 0; j < no_of_frames && frames[j]!=-1; ++j){
            printf("%d\t", frames[j]);
        }

        }


    }
    printf("\n-----------------------------------------");
    printf("\nTotal Page Faults = %d\n", faults);

    return 0;
}











